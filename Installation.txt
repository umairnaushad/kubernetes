################################################## Pre-Requisite (ALL NODES) ##################################################
https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#letting-iptables-see-bridged-traffic
Step 1: (Verify the MAC address and product_uuid are unique for every node)
  ip link or ifconfig -a
  sudo cat /sys/class/dmi/id/product_uuid

Step 2: (Letting iptables see bridged traffic)
  sudo modprobe br_netfilter

cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
br_netfilter
EOF
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sudo sysctl --system

Step 3: (Disable swap space)
sudo swapoff -a
nano /etc/fstab //comment out the last line having swap space

################################################## INSTALL CONTAINER RUNTIME (ALL NODES) ##################################################
https://kubernetes.io/docs/setup/production-environment/container-runtimes/
Step 3: Install docker my following steps mentioned in above link

################################################## INSTALL KUBEADM (ALL NODES) ##################################################
https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#letting-iptables-see-bridged-traffic
Step 4: (Installing kubeadm, kubelet and kubectl)
sudo apt-get update && sudo apt-get install -y apt-transport-https curl
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl

################################################## INITIALIZE CLUSTER (MASTER ONLY) ##################################################
https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#pod-network
https://docs.projectcalico.org/getting-started/kubernetes/quickstart
Step 5: (Initializing your control-plane node)
sudo kubeadm init --pod-network-cidr=192.168.0.0/16 --apiserver-advertise-address=<master-node-ip(192.168.1.179)>
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubeadm join 192.168.1.179:6443 --token mrj3e7.j05v2eorcauzdcpd \
    --discovery-token-ca-cert-hash sha256:ab77eb651306ade6c087cc420f0c7ce51ad120394a48b67a6b34df0b8c5f7c4d 

Step 6: (Installing a Pod network add-on)
sudo curl https://docs.projectcalico.org/manifests/calico.yaml -O
kubectl apply -f calico.yaml
kubectl get pods --all-namespaces

OR
https://www.weave.works/docs/net/latest/kubernetes/kube-addon/

Step 7: (Control plane node isolation)
#kubectl taint nodes --all node-role.kubernetes.io/master-

################################################## JOIN NODE (WORKER ONLY) ##################################################
https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#pod-network
https://computingforgeeks.com/join-new-kubernetes-worker-node-to-existing-cluster/
Step 8: (Get token form master)
//sudo kubeadm token create --ttl 0 // if expired
kubeadm token list
openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'
kubectl cluster-info

Step 9: (Join node)
sudo su -
kubeadm join 192.168.1.179:6443 --token mrj3e7.j05v2eorcauzdcpd \
    --discovery-token-ca-cert-hash sha256:ab77eb651306ade6c087cc420f0c7ce51ad120394a48b67a6b34df0b8c5f7c4d
Step 10: (Add label on worker)
kubectl label node node01 node-role.kubernetes.io/worker=worker

################################################## INSTALL DASHBOARD (MASTER ONLY) ##################################################
https://upcloud.com/community/tutorials/deploy-kubernetes-dashboard/
https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/

################################################## AUTO COMPLETE (MASTER ONLY) ##################################################
https://www.liquidweb.com/kb/how-to-install-kubernetes-on-ubuntu-macos-and-windows/
On Worker node
Step 11: (Copy admin.conf from master to worker node)
scp master01@master01-virtualbox:/etc/kubernetes/admin.conf /etc/kubernetes/
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
source /usr/share/bash-completion/bash_completion

echo 'source <(kubectl completion bash)' >>~/.bashrc
kubectl completion bash >/etc/bash_completion.d/kubectl
source /usr/share/bash-completion/bash_completion

################################################## UNINSTALL KUBERNETES ##################################################
kubeadm reset
sudo apt-get purge kubeadm kubectl kubelet kubernetes-cni kube*
sudo apt-get autoremove
sudo rm -rf ~/.kube

################################################## SET DEFAULT NAMESPACE ##################################################
kubectl config set-context --current --namespace=devops
kubectl config view --minify | grep namespace:
