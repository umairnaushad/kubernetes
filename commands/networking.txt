#################### ROUTING ####################
Scenario
Network1: 192.168.1.0 --- machine1: 192.168.1.10 --- machine2: 192.168.1.11
Netowrk2: 192.168.2.0 --- machine1: 192.168.2.10 --- machine2: 192.168.2.11
Router ips: 192.168.1.1, 192.168.2.1

Switch connects 2 machines. Switch used to connect computers in same network. 
ip link
ip addr add 192.168.1.10/24 dev eth0
ip addr add 192.168.1.11/24 dev eth0

Router connects 2 networks. Router used to connect computers in different network
route
ip route add 192.168.2.0/24 via 192.168.1.1
ip route add default via 192.168.1.1

cat /proc/sys/net/ipv4/ip_forward
or
cat /etc/sysctl.conf
#net.ipv4.ip_forward=1

#################### DNS ####################
/etc/hosts
To configure DNS server
 /etc/resolv.conf
 nameserver 192.168.1.100
 
 #################### LINUX NAMESPACES ####################
 ip netns
 ip netns add blue
 ip netns add red
 ip link add veth-blue type veth peer name veth-red
 ip link set veth-red netns red
 ip link set veth-blue netns blue
 
  #################### OTHERS ####################
  ip r
  netstat -natulp | grep kubescheduler
  netstat -natulp | grep etcd | grep LISTEN
 
 #################### LINUX BRIDGE ####################
 ip link add v-net-0 type bridge
 ip link set dev v-net-0 up
 ip link add veth-blue type veth peer name veth-red-br
 ip link set veth-red netns red
 ip link set veth-red-br master v-net-0
 
 
 
 
 
 
 
 
 
