#################### CREATE CA CERTIFICATE ####################
openssl genrsa -out ca.key 2048
openssl req -new -key ca.key -subj "/CN= KUBERNETES-CA" -out ca.csr
openssl x509 -req -in ca.csr -signkey ca.key -out ca.crt               # self signed

#################### CREATE CERTIFICATE FOR NEW USER ####################
Step 1: Create private key
openssl genrsa -out umair.key 2048

Step 2: Generate CSR(Certificate Signing Request)
openssl req -new -key umair.key -subj "/CN=kube-admin" -out umair.csr

Step 3: Sign certificate (copy ca.crt & ca.key from /etc/kubernetes/pki)
openssl x509 -req -in umair.csr -CA ca.crt -CAkey ca.key -out umair.crt -CAcreateserial -days 365
curl -k https://192.168.10.11:6443/api/v1/pods --key umair.key --cert umair.crt --cacert ca.crt

#################### CREATE CERTIFICATE FOR NEW USER ####################
kubectl auth can-i create deployment
kubectl auth can-i delete nodes --as dev-user

kubectl api-resources --namespaced=true

#################### CREATE KUBECONFIG FILE ####################
kubectl config view
kubectl --kubeconfig umair.kubeconfig config set-cluster kubernetes --server https://192.168.10.11:6443 --certificate-authority=ca.crt
kubectl --kubeconfig umair.kubeconfig config set-credentials umair --client-certificate /home/umair/umair.crt  --client-key /home/umair/umair.key
kubectl --kubeconfig umair.kubeconfig config set-context umair-kubernetes --cluster kubernetes --namespace finance --user umair

