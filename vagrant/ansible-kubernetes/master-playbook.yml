---
- hosts: all
  vars:
    node_ip: 192.168.10.10
    pod_network_cidr: 192.168.50.0/24
  become: true
  tasks:
  - name: Update packages
    command: "{{ item }}"
    with_items:
    - sudo rm -vf /var/lib/apt/lists/*
    - sudo apt-get update

  - name: Install Packages
    apt:
      name: "{{ packages }}"
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - gnupg2
      - nfs-common

  - name: Disable swap space
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Docker apt signing key and apt repository
    #apt_key:
    #  url: https://download.docker.com/linux/ubuntu/gpg
    command: "{{ item }}"
    with_items:
    - sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg
    - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    #- sudo apt-get update
    #retries: 5
      
  #- name: Docker apt reposiotry
  #  apt_repository:
  #    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable

  - name: Update packages
    command: "{{ item }}"
    with_items:
    - sudo apt-get update
      
  - name: Install docker
    apt:
      name: "{{ packages }}"
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Kubernetes apt signing key
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Kubernetes apt repository
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

#  - name: Configure node ip
#    lineinfile:
#      path: /etc/default/kubelet
#      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

#  - name: Restart kubelet
#    service:
#      name: kubelet
#      daemon_reload: yes
#      state: restarted

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address="{{ node_ip }}" --apiserver-cert-extra-sans="{{ node_ip }}"  --node-name k8s-master --pod-network-cidr={{ pod_network_cidr }}

  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/vagrant/.kube
     - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
     - chown vagrant:vagrant /home/vagrant/.kube/config

  - name: Install calico pod network
    become: false
    command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

  - name: Install dashboard
    become: false
    command: "{{ item }}"
    with_items:
    - kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml
    - kubectl apply -f dashboard-admin.yaml
    - kubectl apply -f dashboard-read-only.yaml